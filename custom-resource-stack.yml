AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ResourceName:
    Type: String
    Description: Name of the custom resource
    AllowedValues:
      - lightsail-instance
      - lightsail-key-pair
      - lightsail-static-ip
      - secure-string-parameter

Conditions:
  IsLightsailInstance: !Equals [ !Ref ResourceName, 'lightsail-instance' ]
  IsLightsailKeyPair: !Equals [ !Ref ResourceName, 'lightsail-key-pair' ]
  IsLightsailStaticIp: !Equals [ !Ref ResourceName, 'lightsail-static-ip' ]
  IsSecureStringParameter: !Equals [ !Ref ResourceName, 'secure-string-parameter' ]

Resources:
  ResourceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub 'Role used by the ${ResourceName} Custom Resource'
      Path: /user/codebuild/
      RoleName: !Sub 'cfn-custom-resource-${ResourceName}.role'
      Policies:
        - PolicyName: cloudwatch-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cfn-custom-resource-${ResourceName}:log-stream:*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
  ResourceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/cfn-custom-resource-${ResourceName}'
      RetentionInDays: 7
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'cfn-custom-resource-${ResourceName}'
      Handler: lambda_function.handler
      Timeout: 120
      Runtime: python3.8
      Role: !GetAtt [ ResourceRole, Arn ]
      Code:
        ZipFile: "print('hello, world')"

  LightsailInstancePolicy:
    Condition: IsLightsailInstance
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ResourceRole
      PolicyName: !Sub 'cfn-custom-resource-${ResourceName}.policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lightsail:CreateInstances
              - lightsail:GetInstanceState
              - lightsail:GetInstance
              - lightsail:DeleteInstance
              - lightsail:AttachStaticIp
              - lightsail:DetachStaticIp
            Resource:
              - !Sub 'arn:aws:lightsail:*:${AWS::AccountId}:*'

  LightsailKeyPairPolicy:
    Condition: IsLightsailKeyPair
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ResourceRole
      PolicyName: !Sub 'cfn-custom-resource-${ResourceName}.policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lightsail:CreateKeyPair
              - lightsail:DeleteKeyPair
            Resource:
              - !Sub 'arn:aws:lightsail:*:${AWS::AccountId}:*'

  LightsailStaticIpPolicy:
    Condition: IsLightsailStaticIp
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ResourceRole
      PolicyName: !Sub 'cfn-custom-resource-${ResourceName}.policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lightsail:GetStaticIp
              - lightsail:ReleaseStaticIp
              - lightsail:GetInstanceState
              - lightsail:AttachStaticIp
              - lightsail:DetachStaticIp
              - lightsail:AllocateStaticIp
            Resource:
              - !Sub 'arn:aws:lightsail:*:${AWS::AccountId}:*'

  SecureStringParameterPolicy:
    Condition: IsSecureStringParameter
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ResourceRole
      PolicyName: !Sub 'cfn-custom-resource-${ResourceName}.policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ssm:PutParameter
              - ssm:DeleteParameter
            Resource:
              - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/*'

Outputs:
  FunctionArn:
    Description: The function arn for this resource
    Value: !GetAtt [ Resource, Arn ]
    Export:
      Name: !Sub 'custom-${ResourceName}'