name: Deploy Custom Resources
on:
  push:
    branches:
      - master
      - main
    paths:
      - 'aws/custom-resources/*'
  workflow_dispatch:
env: 
  BASE_PATH: aws/custom-resources

jobs:
  getPackages:
    name: Get Changed Packages
    runs-on: ubuntu-latest
    outputs:
      changedPackages: ${{ steps.getChangedPackages.outputs.packages }}
      deletedPackages: ${{ steps.getDeletedPackages.outputs.packages }}
    steps:
      - uses: frenck/action-setup-yq@v1
      - uses: actions/checkout@v3
      - uses: tj-actions/changed-files@v18.7
        id: changedFiles
      - uses: tj-actions/changed-files@v18.7
        id: infraYmls
        with:
          files: '${{ env.BASE_PATH }}/**/infra.yml'
      - name: Find Added/Changed Packages
        id: getChangedPackages
        run: |
          cd ${{ env.BASE_PATH }}
          PACKAGES=
          for PACKAGE in *; do
            if [[ -e "$PACKAGE/infra.yml" ]] && [[ "$(yq '.Template' < "$PACKAGE/infra.yml")" = custom-resource ]]; then
              PACKAGES+=" $PACKAGE"
            fi
          done
          CHANGES=
          for PACKAGE in $PACKAGES; do
            for FILE in ${{ steps.changedFiles.outputs.all_changed_and_modified_files }}; do
              if [[ "$FILE" = "${{ env.BASE_PATH }}/$PACKAGE/"* ]]; then
                CHANGES+=",\"$PACKAGE\""
                break
              fi
            done
          done
          CHANGES="[$(cut -c2- <<< "$CHANGES")]"
          echo "::set-output name=packages::$(echo "$CHANGES")"
      - name: Find Deleted Packages
        id: getDeletedPackages
        run: |
          cd ${{ env.BASE_PATH }}
          DELETIONS=
          for PACKAGE in *; do
            for FILE in ${{ steps.infraYmls.outputs.deleted_files }}; do
              if [[ "$FILE" = "${{ env.BASE_PATH }}/$PACKAGE/"* ]]; then
                DELETIONS+=",\"$PACKAGE\""
                break
              fi
            done
          done
          DELETIONS="[$(cut -c2- <<< "$DELETIONS")]"
          echo "::set-output name=packages::$(echo "$DELETIONS")"

  deployInfra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: 
      - getPackages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.getPackages.outputs.changedPackages) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: frenck/action-setup-yq@v1
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::060868188835:role/infra-github-runner
      - name: Deploy Infrastructure
        run: |
          ./aws/bin/infra -c "${{ env.BASE_PATH }}/${{ matrix.package }}/infra.yml"
  
  deleteInfra:
    name: Delete Infrastructure
    runs-on: ubuntu-latest
    needs: 
      - getPackages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.getPackages.outputs.deletedPackages) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: frenck/action-setup-yq@v1
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::060868188835:role/infra-github-runner
      - name: Delete Infrastructure
        run: |
          revive_contents() {
              OUTPUT=$(git rev-list HEAD -n 1 -- "$1" | git checkout $(cat '/dev/stdin')^ "$1" 2>&1)
              if [[ $? != 0 ]]; then
                  echo "$OUTPUT" >&2
                  exit 1
              fi
              cat "$1"
              git rm -f "$1" >/dev/null
          }
          stack_events() {
            # args:
            #   1) stack-name
            #   2) event-count?
            aws cloudformation describe-stack-events \
              --stack-name "$1" \
              --output text \
              --query '
                StackEvents[:'"$2"'].join(`||`, [ResourceType, LogicalResourceId, ResourceStatus, not_null(ResourceStatusReason, `-`)])
                | reverse(@) 
                | join(`;;`, @)' \
              | sed 's@;;@\n@g' \
              | column -s '||' -dN "Type,Id,Status,Reason" -W "Reason" -t
          }
          cd "${{ env.BASE_PATH }}/${{ matrix.package }}"
          STACK_NAME="$(yq '(.Template + "-" + .AppName)' <<< "$(revive_contents infra.yml)")"
          aws cloudformation delete-stack --stack-name="$STACK_NAME"
          while 
            OUTPUT="$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --output text --query 'Stacks[].StackStatus' 2>/dev/null)"
            [[ "$OUTPUT" = DELETE_IN_PROGRESS ]]
          do
            sleep 3
          done
          if [[ "$OUTPUT" != '' ]]; then
            stack_events "$STACK_NAME" 10
            echo "failed to delete the $STACK_NAME stack - status: $OUTPUT" >&2
            exit 1
          fi

