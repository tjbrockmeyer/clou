name: Rotate Lightsail Credentials
on:
  schedule:
    - cron: "0 4 * * 1"
  workflow_dispatch:
env:
  ROLE: arn:aws:iam::060868188835:role/infra-github-runner
  BASE_DIR: infra/aws/resources

jobs:
  updateFiles:
    name: Get Lightsail Instance Files
    runs-on: ubuntu-latest
    outputs:
      hasFiles: ${{ steps.updateFiles.outputs.hasFiles }}
      command: ${{ steps.updateFiles.outputs.command  }}
    steps:
      - uses: frenck/action-setup-yq@v1
      - uses: actions/checkout@v3
      - id: updateFiles
        name: Get and Update Files
        run: |
          cd "${{ env.BASE_DIR }}"
          LIST=
          for FILE in *; do
            COMMAND=""
            DEPLOYMENTS=""
            while read DEPLOYMENT; do
              if [[ "$(yq ".deployments.$DEPLOYMENT.using" < "$FILE")" = lightsail-instance ]]; then
                COMMAND="clou deploy -c \\\"$FILE\\\""
                DEPLOYMENTS+=" \\\"$DEPLOYMENT\\\""
                SERIAL="$(yq ".deployments.$DEPLOYMENT.parameters.AccessKeySerial" < "$FILE")"
                NEXT_SERIAL="$(( "$SERIAL" + 1 ))"
                yq -i ".deployments.$DEPLOYMENT.parameters.AccessKeySerial = $NEXT_SERIAL" "$FILE"
              fi
            done <<< "$(yq '.deployments | keys | .[]' < "$FILE")"
            if [[ -n $COMMAND ]]; then
              LIST+=",\"$COMMAND$DEPLOYMENTS\""
            fi
          done
          LIST="[$(cut -c2- <<< "$LIST")]"
          printf "$LIST\n"
          echo "::set-output name=hasFiles::$([[ "$LIST" = '[]' ]] && echo false || echo true)"
          echo "::set-output name=command::$(echo "$LIST")"
      - uses: EndBug/add-and-commit@v9.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          author_name: github_actions[bot]
          message: 'rotate credentials for lightsail instances'
          push: true

  deployChanges:
    if: needs.updateFiles.outputs.hasFiles == 'true'
    name: Rotate Credentials
    runs-on: ubuntu-latest
    needs:
      - updateFiles
    strategy:
      fail-fast: false
      matrix:
        command: ${{ fromJSON(needs.updateFiles.outputs.command) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: frenck/action-setup-yq@v1
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-clou
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ROLE }}
      - name: Run ${{ matrix.command }}
        run: |
          cd "${{ env.BASE_DIR }}"
          ${{ matrix.command }}
