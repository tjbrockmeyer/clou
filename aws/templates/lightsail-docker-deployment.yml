AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  Substitution:
    GithubRunnerPolicies: '.Resources.GHARole.Properties.Policies[0].PolicyDocument.Statement'
    AppRolePolicies: '.Resources.Role.Properties.Policies[0].PolicyDocument.Statement'
    ComposeFile: '.Resources.DockerCompose.Properties.ComposeFile'

Parameters:
  NeedGHARole:
    Type: String
  AppName:
    Type: String
  Env:
    Type: String
    AllowedValues:
      - infra
      - np
      - prod
  Repo:
    Type: String
  LightsailInstance:
    Type: String
  LightsailKeyParameter:
    Type: AWS::SSM::Parameter::Value<String>

Conditions:
  CreateGHARole: !And 
    - !Condition IsInfra
    - !Equals 
      - !Ref NeedGHARole
      - 'yes'
  IsInfra: !Equals 
    - !Ref Env
    - infra
  IsEnv: !Not
    - !Equals 
      - !Ref Env
      - infra

Resources:
  GHARole:
    Condition: CreateGHARole
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-github-runner-role
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !ImportValue github-oidc
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${Repo}:*
      Policies:
        - PolicyName: 'inline'
          PolicyDocument:
            Version: "2012-10-17"
            Statement: []
  ECRRepo:
    Condition: IsInfra
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref AppName
      ImageTagMutability: IMMUTABLE
      LifecyclePolicy: 
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "delete older dev images",
                "selection": {
                  "tagStatus": "tagged",
                  "tagPrefixList": [
                    "dev-"
                  ],
                  "countNumber": 2,
                  "countType": "imageCountMoreThan"
                },
                "action": {
                  "type": "expire"
                }
              },
              {
                "rulePriority": 2,
                "description": "delete older version images",
                "selection": {
                  "tagStatus": "tagged",
                  "tagPrefixList": [
                    "release-"
                  ],
                  "countNumber": 2,
                  "countType": "imageCountMoreThan"
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }


  # ENVIRONMENT


  DockerCompose:
    Condition: IsEnv
    Type: Custom::LightsailDockerCompose
    Properties:
      ServiceToken: !ImportValue cfn-custom-resource-lightsail-docker-compose
      InstanceName: !Ref LightsailInstance
      PrivateKey: !Ref LightsailKeyParameter
      RoleArn: !GetAtt Role.Arn
      Serial: 1
      ComposeFile: {}
  Role:
    Condition: IsEnv
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-${Env}-approle-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: !Sub 'arn:aws:iam::060868188835:user/lightsail/${LightsailInstance}'
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: '2012-10-17'
            Statement: []
