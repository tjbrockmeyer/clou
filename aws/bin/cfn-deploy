#!/bin/bash

set -e

TEMPLATE_FILE="$1"
STACK_NAME="$2"
INTERACTIVE="${3:-true}"

CAPABILITIES="--capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND"

if [[ -n "$3" ]]; then
    PARAMETER_OVERRIDES="--parameter-overrides ${@: 3}"
    PARAMETERS="--parameters ${@: 3}"
else
    PARAMETER_OVERRIDES=""
    PARAMETERS=""
fi

if [[ -z "$TEMPLATE_FILE" ]] || [[ -z "$STACK_NAME" ]]; then
    echo "usage: $(basename "$0") <template-file> <stack-name> [name=value]..."
    exit 1
fi

if aws ssm get-parameter --name ' /global/stack-notifications-topic-arn' --output text --query 'Parameter.Value' >/tmp/topic-arn 2>/dev/null
then
    echo Sending notifications to $(cat /tmp/topic-arn)...
    NOTIFICATIONS="--notification-arns $(cat /tmp/topic-arn)"
else
    echo Not sending any notifications...
    NOTIFICATIONS=""
fi

if [[ $INTERACTIVE = 'false' ]]; then
    if ! aws cloudformation describe-stacks --stack-name="$STACK_NAME" --output text --query 'Stacks[0].StackStatus' >/tmp/stack-status 2>/dev/null; then
        ACTION=create-stack
    elif [[ "$(cat /tmp/stack-status)" = "ROLLBACK_COMPLETE" ]]; then
        aws cloudformation delete-stack --stack-name "$STACK_NAME"
        sleep 15
        ACTION=create-stack
    else
        ACTION=update-stack
    fi
    aws cloudformation $ACTION --stack-name="$STACK_NAME" --template-body="$(cat "$TEMPLATE_FILE")" $NOTIFICATIONS $PARAMETERS $CAPABILITIES

else
    if ! aws cloudformation deploy \
        --template-file "$TEMPLATE_FILE" --stack-name "$STACK_NAME" \
        $NOTIFICATIONS \
        $PARAMETER_OVERRIDES \
        $CAPABILITIES
    then
        echo 'Stack create/update failed:'
        aws cloudformation describe-stack-events --stack-name "$STACK_NAME" --max-items 30 \
            --output yaml \
            --query 'StackEvents[?contains(ResourceStatus, `_FAILED`)].{Status: ResourceStatus, Id: LogicalResourceId, Reason: ResourceStatusReason}'
    fi

    STATUS=$(aws cloudformation describe-stacks --stack-name="$STACK_NAME" --output text --query 'Stacks[0].StackStatus')
    if [[ $STATUS = "ROLLBACK_COMPLETE" ]]; then
        aws cloudformation delete-stack --stack-name "$STACK_NAME"
    fi

fi

set +e
rm /tmp/topic-arn 2>/dev/null
rm /tmp/stack-status 2>/dev/null
exit 0
