#!/bin/bash

set -e

USAGE="\
usage: $(basename "$0") <lightsail-instance-name> [arg]...
    args are some of: { rotate-access-key }"

DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

INSTANCE="$1"
STACK="lightsail-$INSTANCE"

if [[ -z "$INSTANCE" ]]; then
    echo "$USAGE" >&2
    exit 1
fi

shift
ROTATE=
for ARG in "$@"; do
    case "$ARG" in
        rotate-access-key)
            ROTATE=true
            ;;
        *)
            printf "found invalid argument: '$ARG'\n$USAGE\n" >&2
            exit 1
    esac
done

# determine the new serial value for the access key based on the previous one (if it exists)
CURRENT_SERIAL="$(aws cloudformation describe-stacks --stack-name "$STACK" --query 'Stacks[0].Parameters[?ParameterKey==`AccessKeySerial`].ParameterValue' 2>/dev/null | jq -r '.[0]')"

if [[ "$CURRENT_SERIAL" = null ]] || [[ -z "$CURRENT_SERIAL" ]]; then
    NEXT_SERIAL=0
elif [[ -n "$ROTATE" ]]; then 
    NEXT_SERIAL=$(( $CURRENT_SERIAL + 1 ))
else
    NEXT_SERIAL="$CURRENT_SERIAL"
fi

# deploy the cloudformation template
"$DIR"/../bin/cfn-deploy "$DIR/../templates/lightsail-instance.yml" "$STACK" "Name=$INSTANCE" "AccessKeySerial=$NEXT_SERIAL"

# Rotate the secret on the machine if it was rotated in cloudformation
if [[ -n "$ROTATE" ]]; then
    KEY="$(aws ssm get-parameter --name=" /lightsail/$INSTANCE/access-key" --with-decryption --output text --query 'Parameter.Value' | jq -r | sed 's@\r@@g')"
    "$DIR"/../bin/lightsail-ssh "$INSTANCE" "\
aws configure set aws_access_key_id '$(jq -r '.awsAccessKeyId' <<< "$KEY")' --profile main &&
aws configure set aws_secret_access_key '$(jq -r '.awsSecretAccessKey' <<< "$KEY")' --profile main"
fi